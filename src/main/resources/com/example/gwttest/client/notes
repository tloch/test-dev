
	// Create a handler for the sendButton and nameField
	class MyHandler implements ClickHandler, KeyUpHandler {
		/**
		* Fired when the user clicks on the sendButton.
		*/
		public void onClick(ClickEvent event) {
			sendNameToServer();
		}

		/**
		* Fired when the user types in the nameField.
		*/
		public void onKeyUp(KeyUpEvent event) {
			if (event.getNativeKeyCode() == KeyCodes.KEY_ENTER) {
				sendNameToServer();
			}
		}

		/**
		* Send the name from the nameField to the server and wait for a response.
		*/
		private void sendNameToServer() {
			// First, we validate the input.
			errorLabel.setText("");
			String textToServer = nameField.getText();
			if (!FieldVerifier.isValidName(textToServer)) {
				errorLabel.setText("Please enter at least four characters");
				return;
			}

			// Then, we send the input to the server.
			sendButton.setEnabled(false);
			textToServerLabel.setText(textToServer);
			serverResponseLabel.setText("");
			greetingService.greetServer(textToServer, new AsyncCallback<String>() {
				public void onFailure(Throwable caught) {
					// Show the RPC error message to the user
					dialogBox.setText("Remote Procedure Call - Failure");
					serverResponseLabel.addStyleName("serverResponseLabelError");
					serverResponseLabel.setHTML(SERVER_ERROR);
					dialogBox.center();
					closeButton.setFocus(true);
				}

				public void onSuccess(String result) {
					dialogBox.setText("Remote Procedure Call");
					serverResponseLabel.removeStyleName("serverResponseLabelError");
					serverResponseLabel.setHTML(result);
					dialogBox.center();
					closeButton.setFocus(true);
				}
			});
		}
	}
